{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Sandro\\\\Desktop\\\\Malls.ge\\\\S\\\\react-app\\\\src\\\\components\\\\products.jsx\";\nimport React, { Component } from 'react';\nimport { SearchBar } from 'react-bootstrap';\nimport { CardDeck } from 'react-bootstrap'; // class ProductCategoryRow extends Component {\n//     render() {\n//       const category = this.props.category;\n//       return (\n//         <tr>\n//           <th colSpan=\"2\">\n//             {category}\n//           </th>\n//         </tr>\n//       );\n//     }\n//   }\n//   class ProductRow extends Component {\n//     render() {\n//       const product = this.props.product;\n//       const name = product.stocked ?\n//         product.name :\n//         <span style={{color: 'red'}}>\n//           {product.name}\n//         </span>;\n//       return (\n//         <tr>\n//           <td>{name}</td>\n//           <td>{product.price}</td>\n//         </tr>\n//       );\n//     }\n//   }\n//   class ProductTable extends Component {\n//     render() {\n//       const filterText = this.props.filterText;\n//       const inStockOnly = this.props.inStockOnly;\n//       const rows = [];\n//       let lastCategory = null;\n//       this.props.products.forEach((product) => {\n//         if (product.name.indexOf(filterText) === -1) {\n//           return;\n//         }\n//         if (inStockOnly && !product.stocked) {\n//           return;\n//         }\n//         if (product.category !== lastCategory) {\n//           rows.push(\n//             <ProductCategoryRow\n//               category={product.category}\n//               key={product.category} />\n//           );\n//         }\n//         rows.push(\n//           <ProductRow\n//             product={product}\n//             key={product.name}\n//           />\n//         );\n//         lastCategory = product.category;\n//       });\n//       return (\n//         <table>\n//           <thead>\n//             <tr>\n//               <th>Name</th>\n//               <th>Price</th>\n//             </tr>\n//           </thead>\n//           <tbody>{rows}</tbody>\n//         </table>\n//       );\n//     }\n//   }\n//   class SearchBar extends Component {\n//     constructor(props) {\n//       super(props);\n//       this.handleFilterTextChange = this.handleFilterTextChange.bind(this);\n//       this.handleInStockChange = this.handleInStockChange.bind(this);\n//     }\n//     handleFilterTextChange(e) {\n//       this.props.onFilterTextChange(e.target.value);\n//     }\n//     handleInStockChange(e) {\n//       this.props.onInStockChange(e.target.checked);\n//     }\n//     render() {\n//       return (\n//         <form>\n//           <input\n//             type=\"text\"\n//             placeholder=\"Search...\"\n//             value={this.props.filterText}\n//             onChange={this.handleFilterTextChange}\n//           />\n//           <p>\n//             <input\n//               type=\"checkbox\"\n//               checked={this.props.inStockOnly}\n//               onChange={this.handleInStockChange}\n//             />\n//             {' '}\n//             Only show products in stock\n//           </p>\n//         </form>\n//       );\n//     }\n//   }\n\nclass FilterableProductTable extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filterText: '',\n      inStockOnly: false\n    };\n    this.handleFilterTextChange = this.handleFilterTextChange.bind(this);\n    this.handleInStockChange = this.handleInStockChange.bind(this);\n  }\n\n  handleFilterTextChange(filterText) {\n    this.setState({\n      filterText: filterText\n    });\n  }\n\n  handleInStockChange(inStockOnly) {\n    this.setState({\n      inStockOnly: inStockOnly\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n        filterText: this.state.filterText,\n        inStockOnly: this.state.inStockOnly,\n        onFilterTextChange: this.handleFilterTextChange,\n        onInStockChange: this.handleInStockChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ProductTable, {\n        products: this.props.products,\n        filterText: this.state.filterText,\n        inStockOnly: this.state.inStockOnly\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nconst PRODUCTS = [{\n  category: 'Sporting Goods',\n  price: '$49.99',\n  stocked: true,\n  name: 'Football'\n}, {\n  category: 'Sporting Goods',\n  price: '$9.99',\n  stocked: true,\n  name: 'Baseball'\n}, {\n  category: 'Sporting Goods',\n  price: '$29.99',\n  stocked: false,\n  name: 'Basketball'\n}, {\n  category: 'Electronics',\n  price: '$99.99',\n  stocked: true,\n  name: 'iPod Touch'\n}, {\n  category: 'Electronics',\n  price: '$399.99',\n  stocked: false,\n  name: 'iPhone 5'\n}, {\n  category: 'Electronics',\n  price: '$199.99',\n  stocked: true,\n  name: 'Nexus 7'\n}];\nexport default Products;","map":{"version":3,"sources":["C:/Users/Sandro/Desktop/Malls.ge/S/react-app/src/components/products.jsx"],"names":["React","Component","SearchBar","CardDeck","FilterableProductTable","constructor","props","state","filterText","inStockOnly","handleFilterTextChange","bind","handleInStockChange","setState","render","products","PRODUCTS","category","price","stocked","name","Products"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,SAAR,QAAwB,iBAAxB;AACA,SAAQC,QAAR,QAAuB,iBAAvsBAAN,SAAqCH,SAArC,CAA+C;AAC7CI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE,EADD;AAEXC,MAAAA,WAAW,EAAE;AAFF,KAAb;AAKA,SAAKC,sBAAL,GAA8B,KAAKA,sBAAL,CAA4BC,IAA5B,CAAiC,IAAjC,CAA9B;AACA,SAAKC,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBD,IAAzB,CAA8B,IAA9B,CAA3B;AACD;;AAEDD,EAAAA,sBAAsB,CAACF,UAAD,EAAa;AACjC,SAAKK,QAAL,CAAc;AACZL,MAAAA,UAAU,EAAEA;AADA,KAAd;AAGD;;AAEDI,EAAAA,mBAAmB,CAACH,WAAD,EAAc;AAC/B,SAAKI,QAAL,CAAc;AACZJ,MAAAA,WAAW,EAAEA;AADD,KAAd;AAGD;;AAEDK,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE,QAAC,SAAD;AACE,QAAA,UAAU,EAAE,KAAKP,KAAL,CAAWC,UADzB;AAEE,QAAA,WAAW,EAAE,KAAKD,KAAL,CAAWE,WAF1B;AAGE,QAAA,kBAAkB,EAAE,KAAKC,sBAH3B;AAIE,QAAA,eAAe,EAAE,KAAKE;AAJxB;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,YAAD;AACE,QAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWS,QADvB;AAEE,QAAA,UAAU,EAAE,KAAKR,KAAL,CAAWC,UAFzB;AAGE,QAAA,WAAW,EAAE,KAAKD,KAAL,CAAWE;AAH1B;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAeD;;AAxC4C;;AA4C/C,MAAMO,QAAQ,GAAG,CACf;AAACC,EAAAA,QAAQ,EAAE,gBAAX;AAA6BC,EAAAA,KAAK,EAAE,QAApC;AAA8CC,EAAAA,OAAO,EAAE,IAAvD;AAA6DC,EAAAA,IAAI,EAAE;AAAnE,CADe,EAEf;AAACH,EAAAA,QAAQ,EAAE,gBAAX;AAA6BC,EAAAA,KAAK,EAAE,OAApC;AAA6CC,EAAAA,OAAO,EAAE,IAAtD;AAA4DC,EAAAA,IAAI,EAAE;AAAlE,CAFe,EAGf;AAACH,EAAAA,QAAQ,EAAE,gBAAX;AAA6BC,EAAAA,KAAK,EAAE,QAApC;AAA8CC,EAAAA,OAAO,EAAE,KAAvD;AAA8DC,EAAAA,IAAI,EAAE;AAApE,CAHe,EAIf;AAACH,EAAAA,QAAQ,EAAE,aAAX;AAA0BC,EAAAA,KAAK,EAAE,QAAjC;AAA2CC,EAAAA,OAAO,EAAE,IAApD;AAA0DC,EAAAA,IAAI,EAAE;AAAhE,CAJe,EAKf;AAACH,EAAAA,QAAQ,EAAE,aAAX;AAA0BC,EAAAA,KAAK,EAAE,SAAjC;AAA4CC,EAAAA,OAAO,EAAE,KAArD;AAA4DC,EAAAA,IAAI,EAAE;AAAlE,CALe,EAMf;AAACH,EAAAA,QAAQ,EAAE,aAAX;AAA0BC,EAAAA,KAAK,EAAE,SAAjC;AAA4CC,EAAAA,OAAO,EAAE,IAArD;AAA2DC,EAAAA,IAAI,EAAE;AAAjE,CANe,CAAjB;AASA,eAAeC,QAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport {SearchBar} from 'react-bootstrap';\r\nimport {CardDeck} from 'react-bootstrap';\r\n\r\n// class ProductCategoryRow extends Component {\r\n//     render() {\r\n//       const category = this.props.category;\r\n//       return (\r\n//         <tr>\r\n//           <th colSpan=\"2\">\r\n//             {category}\r\n//           </th>\r\n//         </tr>\r\n//       );\r\n//     }\r\n//   }\r\n  \r\n//   class ProductRow extends Component {\r\n//     render() {\r\n//       const product = this.props.product;\r\n//       const name = product.stocked ?\r\n//         product.name :\r\n//         <span style={{color: 'red'}}>\r\n//           {product.name}\r\n//         </span>;\r\n  \r\n//       return (\r\n//         <tr>\r\n//           <td>{name}</td>\r\n//           <td>{product.price}</td>\r\n//         </tr>\r\n//       );\r\n//     }\r\n//   }\r\n  \r\n//   class ProductTable extends Component {\r\n//     render() {\r\n//       const filterText = this.props.filterText;\r\n//       const inStockOnly = this.props.inStockOnly;\r\n  \r\n//       const rows = [];\r\n//       let lastCategory = null;\r\n  \r\n//       this.props.products.forEach((product) => {\r\n//         if (product.name.indexOf(filterText) === -1) {\r\n//           return;\r\n//         }\r\n//         if (inStockOnly && !product.stocked) {\r\n//           return;\r\n//         }\r\n//         if (product.category !== lastCategory) {\r\n//           rows.push(\r\n//             <ProductCategoryRow\r\n//               category={product.category}\r\n//               key={product.category} />\r\n//           );\r\n//         }\r\n//         rows.push(\r\n//           <ProductRow\r\n//             product={product}\r\n//             key={product.name}\r\n//           />\r\n//         );\r\n//         lastCategory = product.category;\r\n//       });\r\n  \r\n//       return (\r\n//         <table>\r\n//           <thead>\r\n//             <tr>\r\n//               <th>Name</th>\r\n//               <th>Price</th>\r\n//             </tr>\r\n//           </thead>\r\n//           <tbody>{rows}</tbody>\r\n//         </table>\r\n//       );\r\n//     }\r\n//   }\r\n  \r\n//   class SearchBar extends Component {\r\n//     constructor(props) {\r\n//       super(props);\r\n//       this.handleFilterTextChange = this.handleFilterTextChange.bind(this);\r\n//       this.handleInStockChange = this.handleInStockChange.bind(this);\r\n//     }\r\n    \r\n//     handleFilterTextChange(e) {\r\n//       this.props.onFilterTextChange(e.target.value);\r\n//     }\r\n    \r\n//     handleInStockChange(e) {\r\n//       this.props.onInStockChange(e.target.checked);\r\n//     }\r\n    \r\n//     render() {\r\n//       return (\r\n//         <form>\r\n//           <input\r\n//             type=\"text\"\r\n//             placeholder=\"Search...\"\r\n//             value={this.props.filterText}\r\n//             onChange={this.handleFilterTextChange}\r\n//           />\r\n//           <p>\r\n//             <input\r\n//               type=\"checkbox\"\r\n//               checked={this.props.inStockOnly}\r\n//               onChange={this.handleInStockChange}\r\n//             />\r\n//             {' '}\r\n//             Only show products in stock\r\n//           </p>\r\n//         </form>\r\n//       );\r\n//     }\r\n//   }\r\n  \r\n  class FilterableProductTable extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        filterText: '',\r\n        inStockOnly: false\r\n      };\r\n      \r\n      this.handleFilterTextChange = this.handleFilterTextChange.bind(this);\r\n      this.handleInStockChange = this.handleInStockChange.bind(this);\r\n    }\r\n  \r\n    handleFilterTextChange(filterText) {\r\n      this.setState({\r\n        filterText: filterText\r\n      });\r\n    }\r\n    \r\n    handleInStockChange(inStockOnly) {\r\n      this.setState({\r\n        inStockOnly: inStockOnly\r\n      })\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div>\r\n          <SearchBar\r\n            filterText={this.state.filterText}\r\n            inStockOnly={this.state.inStockOnly}\r\n            onFilterTextChange={this.handleFilterTextChange}\r\n            onInStockChange={this.handleInStockChange}\r\n          />\r\n          <ProductTable\r\n            products={this.props.products}\r\n            filterText={this.state.filterText}\r\n            inStockOnly={this.state.inStockOnly}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  \r\n  const PRODUCTS = [\r\n    {category: 'Sporting Goods', price: '$49.99', stocked: true, name: 'Football'},\r\n    {category: 'Sporting Goods', price: '$9.99', stocked: true, name: 'Baseball'},\r\n    {category: 'Sporting Goods', price: '$29.99', stocked: false, name: 'Basketball'},\r\n    {category: 'Electronics', price: '$99.99', stocked: true, name: 'iPod Touch'},\r\n    {category: 'Electronics', price: '$399.99', stocked: false, name: 'iPhone 5'},\r\n    {category: 'Electronics', price: '$199.99', stocked: true, name: 'Nexus 7'}\r\n  ];\r\n  \r\n  export default Products;"]},"metadata":{},"sourceType":"module"}